df_ds <- as.data.frame(ds.freq.20)
ds.freq <- rowSums(as.matrix(ds.tdm))
ds.freq.20 <- tail(sort(ds.freq), n = 20)
df_ds <- as.data.frame(ds.freq.20)
head(df_ds)
df_ds <- tidy(ds.freq.20)
head(df_ds)
ggplot(df_ds, aes(order(names, x), x)) +
geom_bar(stat = "identity", fill = "red") +
coord_flip()
ggplot(df_ds, aes(reorder(names, x), x)) +
geom_bar(stat = "identity", fill = "red") +
coord_flip()
rm(list = ls())
df_final <- read.csv("df_final.csv", stringsAsFactors = FALSE)
df_final$job_title <- tolower(df_final$job_title)
corpus.all <- VCorpus(VectorSource(df_final$summary))
control_list <- list(removePunctuation = TRUE, stopwords = TRUE, tolower = TRUE, weighting = weightTfIdf)
tdm.all <- TermDocumentMatrix(corpus.all, control = control_list)
all.sum <- rowSums(as.matrix(tdm.all))
all.sum <- tail(sort(all.sum), n = 20)
all.sum <- rowSums(as.matrix(tdm.all))
all.20 <- tidy(tail(sort(all.sum), n = 20))
head(all.20)
ggplot(all.20, aes(reorder(names, x), x)) +
geom_bar(stat = "identity") +
coord_flip()
tdm.55 <- removeSparseTerms(tdm.all, sparse = 0.55)
df_55 <- tidy(tail(sort(rowSums(as.matrix(tdm.55))), n = 20))
ggplot(df_55, aes(reorder(names, x), x)) +
geom_bar(stat = "identity") +
coord_flip()
tdm.85 <- removeSparseTerms(tdm.all, sparse = 0.85)
df_85 <- tidy(tail(sort(rowSums(as.matrix(tdm.85))), n = 20))
ggplot(df_85, aes(reorder(names, x), x)) +
geom_bar(stat = "identity") +
coord_flip()
df_85 <- tidy(tail(sort(rowSums(as.matrix(tdm.85))), n = 25))
ggplot(df_85, aes(reorder(names, x), x)) +
geom_bar(stat = "identity") +
coord_flip()
tdm.90 <- removeSparseTerms(tdm.all, sparse = 0.90)
df_90 <- tidy(tail(sort(rowSums(as.matrix(tdm.90))), n = 25))
ggplot(df_90, aes(reorder(names, x), x)) +
geom_bar(stat = "identity") +
coord_flip()
tdm.75 <- removeSparseTerms(tdm.all, sparse = 0.75)
df_75 <- tidy(tail(sort(rowSums(as.matrix(tdm.75))), n = 25))
ggplot(df_75, aes(reorder(names, x), x)) +
geom_bar(stat = "identity") +
coord_flip()
tdm.80 <- removeSparseTerms(tdm.all, sparse = 0.80)
df_80 <- tidy(tail(sort(rowSums(as.matrix(tdm.80))), n = 25))
ggplot(df_80, aes(reorder(names, x), x)) +
geom_bar(stat = "identity") +
coord_flip()
ggplot(df_90, aes(reorder(names, x), x)) +
geom_bar(stat = "identity") +
coord_flip()
ggplot(df_85, aes(reorder(names, x), x)) +
geom_bar(stat = "identity") +
coord_flip()
freq.all <- tidy(rowSums(as.matrix(tdm.80)))
head(freq.all, 10)
colnames(freq.all) <- c("words", "count")
head(freq.all)
ggplot(tail(freq.all, n = 25), aes(reorder(words, count), count) +
geom_bar(stat = "identity") +
coord_flip()
ggplot(tail(freq.all, n = 25), aes(reorder(words, count), count)) +
geom_bar(stat = "identity") +
coord_flip()
df.85 <- tidy(rowSums(as.matrix(tdm.85)))
colnames(df.85) <- c("words", "count")
ggplot(tail(df.85, n = 25), aes(reorder(words, count), count)) +
geom_bar(stat = "identity") +
coord_flip()
head(df.85)
tail(df.85)
as.matrix(tdm.85)
df.all <- tidy(sort(rowSums(as.matrix(tdm.85))))
head(df.all, 10)
tail(df.all, 10)
colnames(df.all) <- c("words", "count")
ggplot(tail(df.all, 25), aes(reorder(words, count), count)) +
geom_bar(stat = "identity") +
coord_flip()
ds <- df_final[grep("data scientist", df_final$job_title), ]
ds.corpus <- VCorpus(VectorSource(ds$summary))
ds.tdm <- TermDocumentMatrix(ds.corpus, control = control_list)
df_ds <- tidy(sort(rowSums(as.matrix(ds.tdm))))
colnames(df_ds) <- c("words", "count")
ggplot(tail(df_ds, 25), aes(reorder(words, count), count)) +
geom_bar(stat = "identity", fill = "red") +
coord_flip()
ds.80 <- removeSparseTerms(ds.tdm, sparse = 0.80)
df_ds <- tidy(sort(rowSums(as.matrix(ds.80))))
colnames(df_ds) <- c("words", "count")
ggplot(tail(df_ds, 25), aes(reorder(words, count), count)) +
geom_bar(stat = "identity", fill = "red") +
coord_flip()
ds.90 <- removeSparseTerms(ds.tdm, sparse = 0.90)
df_ds <- tidy(sort(rowSums(as.matrix(ds.80))))
colnames(df_ds) <- c("words", "count")
ggplot(tail(df_ds, 25), aes(reorder(words, count), count)) +
geom_bar(stat = "identity", fill = "red") +
coord_flip()
ds.90 <- removeSparseTerms(ds.tdm, sparse = 0.90)
df_ds <- tidy(sort(rowSums(as.matrix(ds.90))))
colnames(df_ds) <- c("words", "count")
ggplot(tail(df_ds, 25), aes(reorder(words, count), count)) +
geom_bar(stat = "identity", fill = "red") +
coord_flip()
ds.75 <- removeSparseTerms(ds.tdm, sparse = 0.75)
df_ds <- tidy(sort(rowSums(as.matrix(ds.75))))
colnames(df_ds) <- c("words", "count")
ggplot(tail(df_ds, 25), aes(reorder(words, count), count)) +
geom_bar(stat = "identity", fill = "red") +
coord_flip()
ds <- df_final[grep("data scientist", df_final$job_title), 6]
ds <- df_final[grep("data scientist", df_final$job_title), 6]
ds.corpus <- VCorpus(VectorSource(ds))
ds.tdm <- TermDocumentMatrix(ds.corpus, control = control_list)
ds.80 <- removeSparseTerms(ds.tdm, sparse = 0.80)
df_ds <- tidy(sort(rowSums(as.matrix(ds.80))))
colnames(df_ds) <- c("words", "count")
ggplot(tail(df_ds, 25), aes(reorder(words, count), count)) +
geom_bar(stat = "identity", fill = "red") +
coord_flip()
senior <- paste(df_final[grep("senior", df_final$job_title), 6], collapse = " ")
intern <- paste(df_final[grep("intern", df_final$job_title), 6], collapse = " ")
jrsr.corpus <- VCorpus(VectorSource(c(senior, intern)))
jrsr.tdm <- TermDocumentMatrix(jrsr.corpus, control = control_list)
df_jrsr <- tidy(jrsr.tdm)
df_jrsr$document <- mapvalues(df_jrsr$document, from = 1:2,
to = c("senior", "intern"))
df_jrsr %>%
arrange(desc(count)) %>%
mutate(word = factor(term, levels = rev(unique(term))),
type = factor(document, levels = c("senior", "intern"))) %>%
group_by(document) %>%
top_n(25, wt = count) %>%
ungroup() %>%
ggplot(aes(word, count, fill = document)) +
geom_bar(stat = "identity", alpha = .8, show.legend = FALSE) +
labs(title = "TF-IDF of Senior vs Junior Jobs",
x = "Words", y = "TF-IDF") +
facet_wrap(~type, ncol = 2, scales = "free") +
coord_flip()
jrsr.tdm <- removeSparseTerms(jrsr.tdm, sparse = 0.80)
df_jrsr <- tidy(jrsr.tdm)
df_jrsr$document <- mapvalues(df_jrsr$document, from = 1:2,
to = c("senior", "intern"))
df_jrsr %>%
arrange(desc(count)) %>%
mutate(word = factor(term, levels = rev(unique(term))),
type = factor(document, levels = c("senior", "intern"))) %>%
group_by(document) %>%
top_n(25, wt = count) %>%
ungroup() %>%
ggplot(aes(word, count, fill = document)) +
geom_bar(stat = "identity", alpha = .8, show.legend = FALSE) +
labs(title = "TF-IDF of Senior vs Junior Jobs",
x = "Words", y = "TF-IDF") +
facet_wrap(~type, ncol = 2, scales = "free") +
coord_flip()
jrsr.tdm <- removeSparseTerms(jrsr.tdm, sparse = 0.75)
df_jrsr <- tidy(jrsr.tdm)
df_jrsr$document <- mapvalues(df_jrsr$document, from = 1:2,
to = c("senior", "intern"))
df_jrsr %>%
arrange(desc(count)) %>%
mutate(word = factor(term, levels = rev(unique(term))),
type = factor(document, levels = c("senior", "intern"))) %>%
group_by(document) %>%
top_n(25, wt = count) %>%
ungroup() %>%
ggplot(aes(word, count, fill = document)) +
geom_bar(stat = "identity", alpha = .8, show.legend = FALSE) +
labs(title = "TF-IDF of Senior vs Junior Jobs",
x = "Words", y = "TF-IDF") +
facet_wrap(~type, ncol = 2, scales = "free") +
coord_flip()
jrsr.corpus <- VCorpus(VectorSource(c(senior, intern)))
jrsr.tdm <- TermDocumentMatrix(jrsr.corpus, control = control_list)
jrsr.tdm <- removeSparseTerms(jrsr.tdm, sparse = 0.75)
df_jrsr <- tidy(jrsr.tdm)
df_jrsr$document <- mapvalues(df_jrsr$document, from = 1:2,
to = c("senior", "intern"))
df_jrsr %>%
arrange(desc(count)) %>%
mutate(word = factor(term, levels = rev(unique(term))),
type = factor(document, levels = c("senior", "intern"))) %>%
group_by(document) %>%
top_n(25, wt = count) %>%
ungroup() %>%
ggplot(aes(word, count, fill = document)) +
geom_bar(stat = "identity", alpha = .8, show.legend = FALSE) +
labs(title = "TF-IDF of Senior vs Junior Jobs",
x = "Words", y = "TF-IDF") +
facet_wrap(~type, ncol = 2, scales = "free") +
coord_flip()
jrsr.tdm <- TermDocumentMatrix(jrsr.corpus, control = control_list)
jrsr.tdm <- removeSparseTerms(jrsr.tdm, sparse = 0.55)
df_jrsr <- tidy(jrsr.tdm)
df_jrsr$document <- mapvalues(df_jrsr$document, from = 1:2,
to = c("senior", "intern"))
df_jrsr %>%
arrange(desc(count)) %>%
mutate(word = factor(term, levels = rev(unique(term))),
type = factor(document, levels = c("senior", "intern"))) %>%
group_by(document) %>%
top_n(25, wt = count) %>%
ungroup() %>%
ggplot(aes(word, count, fill = document)) +
geom_bar(stat = "identity", alpha = .8, show.legend = FALSE) +
labs(title = "TF-IDF of Senior vs Junior Jobs",
x = "Words", y = "TF-IDF") +
facet_wrap(~type, ncol = 2, scales = "free") +
coord_flip()
jrsr.tdm <- TermDocumentMatrix(jrsr.corpus, control = control_list)
jrsr.tdm.2 <- removeSparseTerms(jrsr.tdm.2, sparse = 0.55)
df_jrsr <- tidy(jrsr.tdm.2)
df_jrsr$document <- mapvalues(df_jrsr$document, from = 1:2,
to = c("senior", "intern"))
df_jrsr %>%
arrange(desc(count)) %>%
mutate(word = factor(term, levels = rev(unique(term))),
type = factor(document, levels = c("senior", "intern"))) %>%
group_by(document) %>%
top_n(25, wt = count) %>%
ungroup() %>%
ggplot(aes(word, count, fill = document)) +
geom_bar(stat = "identity", alpha = .8, show.legend = FALSE) +
labs(title = "TF-IDF of Senior vs Junior Jobs",
x = "Words", y = "TF-IDF") +
facet_wrap(~type, ncol = 2, scales = "free") +
coord_flip()
jrsr.tdm <- TermDocumentMatrix(jrsr.corpus, control = control_list)
jrsr.tdm.2 <- removeSparseTerms(jrsr.tdm, sparse = 0.55)
df_jrsr <- tidy(jrsr.tdm.2)
df_jrsr$document <- mapvalues(df_jrsr$document, from = 1:2,
to = c("senior", "intern"))
df_jrsr %>%
arrange(desc(count)) %>%
mutate(word = factor(term, levels = rev(unique(term))),
type = factor(document, levels = c("senior", "intern"))) %>%
group_by(document) %>%
top_n(25, wt = count) %>%
ungroup() %>%
ggplot(aes(word, count, fill = document)) +
geom_bar(stat = "identity", alpha = .8, show.legend = FALSE) +
labs(title = "TF-IDF of Senior vs Junior Jobs",
x = "Words", y = "TF-IDF") +
facet_wrap(~type, ncol = 2, scales = "free") +
coord_flip()
ml <- df_final[grep("machine learning", df_final$job_title), 6]
ml.corpus <- VCorpus(VectorSource(ml))
ml.tdm <- TermDocumentMatrix(ml.corpus, control = control_list)
ml.80 <- removeSparseTerms(ml.tdm, sparse = 0.80)
df_ml <- tidy(sort(rowSums(as.matrix(ml.80))))
colnames(df_ml) <- c("words", "count")
ggplot(tail(df_ml, 25), aes(reorder(words, count), count)) +
geom_bar(stat = "identity", fill = "green") +
labs(title = "TF-IDF for Machine Learning Jobs",
x = "Words", y = "Count") +
coord_flip()
ml.tdm <- TermDocumentMatrix(ml.corpus, control = control_list)
ml.80 <- removeSparseTerms(ml.tdm, sparse = 0.85)
df_ml <- tidy(sort(rowSums(as.matrix(ml.80))))
colnames(df_ml) <- c("words", "count")
ggplot(tail(df_ml, 25), aes(reorder(words, count), count)) +
geom_bar(stat = "identity", fill = "green") +
labs(title = "TF-IDF for Machine Learning Jobs",
x = "Words", y = "Count") +
coord_flip()
ml.tdm <- TermDocumentMatrix(ml.corpus, control = control_list)
# ml.80 <- removeSparseTerms(ml.tdm, sparse = 0.85)
df_ml <- tidy(sort(rowSums(as.matrix(ml.80))))
colnames(df_ml) <- c("words", "count")
ggplot(tail(df_ml, 25), aes(reorder(words, count), count)) +
geom_bar(stat = "identity", fill = "green") +
labs(title = "TF-IDF for Machine Learning Jobs",
x = "Words", y = "Count") +
coord_flip()
ml.tdm <- TermDocumentMatrix(ml.corpus, control = control_list)
ml.80 <- removeSparseTerms(ml.tdm, sparse = 0.55)
df_ml <- tidy(sort(rowSums(as.matrix(ml.80))))
colnames(df_ml) <- c("words", "count")
ggplot(tail(df_ml, 25), aes(reorder(words, count), count)) +
geom_bar(stat = "identity", fill = "green") +
labs(title = "TF-IDF for Machine Learning Jobs",
x = "Words", y = "Count") +
coord_flip()
ml.tdm <- TermDocumentMatrix(ml.corpus, control = control_list)
ml.80 <- removeSparseTerms(ml.tdm, sparse = 0.75)
df_ml <- tidy(sort(rowSums(as.matrix(ml.80))))
colnames(df_ml) <- c("words", "count")
ggplot(tail(df_ml, 25), aes(reorder(words, count), count)) +
geom_bar(stat = "identity", fill = "green") +
labs(title = "TF-IDF for Machine Learning Jobs",
x = "Words", y = "Count") +
coord_flip()
ml.tdm <- TermDocumentMatrix(ml.corpus, control = control_list)
ml.80 <- removeSparseTerms(ml.tdm, sparse = 0.70)
df_ml <- tidy(sort(rowSums(as.matrix(ml.80))))
colnames(df_ml) <- c("words", "count")
ggplot(tail(df_ml, 25), aes(reorder(words, count), count)) +
geom_bar(stat = "identity", fill = "green") +
labs(title = "TF-IDF for Machine Learning Jobs",
x = "Words", y = "Count") +
coord_flip()
ml.tdm <- TermDocumentMatrix(ml.corpus, control = control_list)
ml.80 <- removeSparseTerms(ml.tdm, sparse = 0.65)
df_ml <- tidy(sort(rowSums(as.matrix(ml.80))))
colnames(df_ml) <- c("words", "count")
ggplot(tail(df_ml, 25), aes(reorder(words, count), count)) +
geom_bar(stat = "identity", fill = "green") +
labs(title = "TF-IDF for Machine Learning Jobs",
x = "Words", y = "Count") +
coord_flip()
ml.tdm <- TermDocumentMatrix(ml.corpus, control = control_list)
ml.80 <- removeSparseTerms(ml.tdm, sparse = 0.60)
df_ml <- tidy(sort(rowSums(as.matrix(ml.80))))
colnames(df_ml) <- c("words", "count")
ggplot(tail(df_ml, 25), aes(reorder(words, count), count)) +
geom_bar(stat = "identity", fill = "green") +
labs(title = "TF-IDF for Machine Learning Jobs",
x = "Words", y = "Count") +
coord_flip()
ml.tdm <- TermDocumentMatrix(ml.corpus, control = control_list)
ml.80 <- removeSparseTerms(ml.tdm, sparse = 0.55)
df_ml <- tidy(sort(rowSums(as.matrix(ml.80))))
colnames(df_ml) <- c("words", "count")
ggplot(tail(df_ml, 25), aes(reorder(words, count), count)) +
geom_bar(stat = "identity", fill = "green") +
labs(title = "TF-IDF for Machine Learning Jobs",
x = "Words", y = "Count") +
coord_flip()
research <- df_final[grep("research", df_final$job_title), 6]
r.corpus <- VCorpus(VectorSource(research))
r.tdm <- TermDocumentMatrix(r.corpus, control = control_list)
df_r <- tidy(sort(rowSums(as.matrix(r.tdm))))
colnames(df_r) <- c("words", "count")
ggplot(tail(df_r, 25), aes(reorder(words, count), count)) +
geom_bar(stat = "identity", fill = orange) +
labs(title = "TF-IDF for Research Job Titles",
x = "Words", y = "Count") +
coord_flip()
r.corpus <- VCorpus(VectorSource(research))
r.tdm <- TermDocumentMatrix(r.corpus, control = control_list)
df_r <- tidy(sort(rowSums(as.matrix(r.tdm))))
colnames(df_r) <- c("words", "count")
ggplot(tail(df_r, 25), aes(reorder(words, count), count)) +
geom_bar(stat = "identity", fill = pink) +
labs(title = "TF-IDF for Research Job Titles",
x = "Words", y = "Count") +
coord_flip()
r.corpus <- VCorpus(VectorSource(research))
r.tdm <- TermDocumentMatrix(r.corpus, control = control_list)
df_r <- tidy(sort(rowSums(as.matrix(r.tdm))))
colnames(df_r) <- c("words", "count")
ggplot(tail(df_r, 25), aes(reorder(words, count), count)) +
geom_bar(stat = "identity", fill = "orange") +
labs(title = "TF-IDF for Research Job Titles",
x = "Words", y = "Count") +
coord_flip()
r.tdm <- TermDocumentMatrix(r.corpus, control = control_list)
r.80 <- removeSparseTerms(r.tdm, sparse = 0.80)
df_r <- tidy(sort(rowSums(as.matrix(r.80))))
colnames(df_r) <- c("words", "count")
ggplot(tail(df_r, 25), aes(reorder(words, count), count)) +
geom_bar(stat = "identity", fill = "orange") +
labs(title = "TF-IDF for Research Job Titles",
x = "Words", y = "Count") +
coord_flip()
ml.tdm <- TermDocumentMatrix(ml.corpus, control = control_list)
ml.80 <- removeSparseTerms(ml.tdm, sparse = 0.80)
df_ml <- tidy(sort(rowSums(as.matrix(ml.80))))
colnames(df_ml) <- c("words", "count")
ggplot(tail(df_ml, 25), aes(reorder(words, count), count)) +
geom_bar(stat = "identity", fill = "green") +
labs(title = "TF-IDF for Machine Learning Jobs",
x = "Words", y = "Count") +
coord_flip()
ml.70 <- removeSparseTerms(ml.tdm, sparse = 0.70)
df_ml <- tidy(sort(rowSums(as.matrix(ml.70))))
colnames(df_ml) <- c("words", "count")
ggplot(tail(df_ml, 25), aes(reorder(words, count), count)) +
geom_bar(stat = "identity", fill = "green") +
labs(title = "TF-IDF for Machine Learning Jobs",
x = "Words", y = "Count") +
coord_flip()
corpus.all <- VCorpus(VectorSource(df_final$summary))
control_list <- list(removePunctuation = TRUE, stopwords = TRUE, tolower = TRUE, weighting = weightTfIdf)
tdm.all <- TermDocumentMatrix(corpus.all, control = control_list)
# Remove outliers consisting of very rare terms
tdm.80 <- removeSparseTerms(tdm.all, sparse = 0.80)
# Sum rows for total & make dataframe
df.all <- tidy(sort(rowSums(as.matrix(tdm.80))))
colnames(df.all) <- c("words", "count")
# Graph
ggplot(tail(df.all, 25), aes(reorder(words, count), count)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "TF-IDF of Indeed Job Postings",
x = "Words", y = "Frequency") +
coord_flip()
df_city %>%
arrange(desc(count)) %>%
mutate(word = factor(term, levels = rev(unique(term))),
city = factor(document, levels = c("NYC", "SEA", "SF",
"DC", "ATL", "BOS",
"AUS", "CIN", "PITT"))) %>%
group_by(document) %>%
top_n(6, wt = count) %>%
ungroup() %>%
ggplot(aes(word, count, fill = document)) +
geom_bar(stat = "identity", alpha = .8, show.legend = FALSE) +
labs(title = "Highest TF-IDF Words in Job Listings by City",
x = "Words", y = "TF-IDF") +
facet_wrap(~city, ncol = 2, scales = "free") +
coord_flip()
nyc <- paste(df_final[df_final$city == "New York", 6], collapse = " ")
sea <- paste(df_final[df_final$city == "Seattle", 6], collapse = " ")
sf <- paste(df_final[df_final$city == "San Francisco", 6], collapse = " ")
dc <- paste(df_final[df_final$city == "Washington", 6], collapse = " ")
atl <- paste(df_final[df_final$city == "Atlanta", 6], collapse = " ")
bos <- paste(df_final[df_final$city == "Boston", 6], collapse = " ")
aus <- paste(df_final[df_final$city == "Austin", 6], collapse = " ")
cin <- paste(df_final[df_final$city == "Cincinnati", 6], collapse = " ")
pitt <- paste(df_final[df_final$city == "Pittsburgh", 6], collapse = " ")
cities <- c(nyc, sea, sf, dc, atl, bos, aus, cin, pitt)
corpus.city <- VCorpus(VectorSource(cities))
tdm.city <- TermDocumentMatrix(corpus.city, control = control_list)
# Sparsity
# tdm.sparse <- removeSparseTerms(tdm.city, sparse = 0.85)
# df_city <- tidy(tdm.sparse)
# Make city dataframe
df_city <- tidy(tdm.city)
df_city$document <- mapvalues(df_city$document,
from = 1:9,
to = c("NYC", "SEA", "SF",
"DC", "ATL", "BOS",
"AUS", "CIN", "PITT"))
df_city %>%
arrange(desc(count)) %>%
mutate(word = factor(term, levels = rev(unique(term))),
city = factor(document, levels = c("NYC", "SEA", "SF",
"DC", "ATL", "BOS",
"AUS", "CIN", "PITT"))) %>%
group_by(document) %>%
top_n(6, wt = count) %>%
ungroup() %>%
ggplot(aes(word, count, fill = document)) +
geom_bar(stat = "identity", alpha = .8, show.legend = FALSE) +
labs(title = "Highest TF-IDF Words in Job Listings by City",
x = "Words", y = "TF-IDF") +
facet_wrap(~city, ncol = 2, scales = "free") +
coord_flip()
ds <- df_final[grep("data scientist", df_final$job_title), 6]
ds.corpus <- VCorpus(VectorSource(ds))
ds.tdm <- TermDocumentMatrix(ds.corpus, control = control_list)
ds.80 <- removeSparseTerms(ds.tdm, sparse = 0.80)
df_ds <- tidy(sort(rowSums(as.matrix(ds.80))))
colnames(df_ds) <- c("words", "count")
ggplot(tail(df_ds, 25), aes(reorder(words, count), count)) +
geom_bar(stat = "identity", fill = "red") +
labs(title = "TF-IDF of Data Scientist Job Titles",
x = "Words", y = "Frequency") +
coord_flip()
senior <- paste(df_final[grep("senior", df_final$job_title), 6], collapse = " ")
intern <- paste(df_final[grep("intern", df_final$job_title), 6], collapse = " ")
jrsr.corpus <- VCorpus(VectorSource(c(senior, intern)))
jrsr.tdm <- TermDocumentMatrix(jrsr.corpus, control = control_list)
df_jrsr <- tidy(jrsr.tdm)
df_jrsr$document <- mapvalues(df_jrsr$document, from = 1:2,
to = c("senior", "intern"))
df_jrsr %>%
arrange(desc(count)) %>%
mutate(word = factor(term, levels = rev(unique(term))),
type = factor(document, levels = c("senior", "intern"))) %>%
group_by(document) %>%
top_n(25, wt = count) %>%
ungroup() %>%
ggplot(aes(word, count, fill = document)) +
geom_bar(stat = "identity", alpha = .8, show.legend = FALSE) +
labs(title = "TF-IDF of Senior vs Junior Jobs",
x = "Words", y = "TF-IDF") +
facet_wrap(~type, ncol = 2, scales = "free") +
coord_flip()
ml <- df_final[grep("machine learning", df_final$job_title), 6]
ml.corpus <- VCorpus(VectorSource(ml))
ml.tdm <- TermDocumentMatrix(ml.corpus, control = control_list)
ml.70 <- removeSparseTerms(ml.tdm, sparse = 0.70)
df_ml <- tidy(sort(rowSums(as.matrix(ml.70))))
colnames(df_ml) <- c("words", "count")
ggplot(tail(df_ml, 25), aes(reorder(words, count), count)) +
geom_bar(stat = "identity", fill = "green") +
labs(title = "TF-IDF for Machine Learning Jobs",
x = "Words", y = "Count") +
coord_flip()
research <- df_final[grep("research", df_final$job_title), 6]
r.corpus <- VCorpus(VectorSource(research))
r.tdm <- TermDocumentMatrix(r.corpus, control = control_list)
r.80 <- removeSparseTerms(r.tdm, sparse = 0.80)
df_r <- tidy(sort(rowSums(as.matrix(r.80))))
colnames(df_r) <- c("words", "count")
ggplot(tail(df_r, 25), aes(reorder(words, count), count)) +
geom_bar(stat = "identity", fill = "orange") +
labs(title = "TF-IDF for Research Job Titles",
x = "Words", y = "Count") +
coord_flip()
